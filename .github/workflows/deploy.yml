name: Deploy to Vercel

on:
  push:
    branches: [main, 'feature/**']
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_PUBLIC_EMAILJS_SERVICE_ID: ${{ secrets.NEXT_PUBLIC_EMAILJS_SERVICE_ID }}
  NEXT_PUBLIC_EMAILJS_TEMPLATE_ID: ${{ secrets.NEXT_PUBLIC_EMAILJS_TEMPLATE_ID }}
  NEXT_PUBLIC_EMAILJS_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY }}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Determine deployment environment
        id: deployment-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Production deployment"
            echo "IS_PRODUCTION=true" >> $GITHUB_ENV
          else
            echo "Preview deployment"
            echo "IS_PRODUCTION=false" >> $GITHUB_ENV
          fi
        
      - name: Deploy to Vercel
        run: |
          if [ "$IS_PRODUCTION" = "true" ]; then
            echo "Deploying to production..."
            vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            echo "Deploying to preview environment..."
            vercel --token=${{ secrets.VERCEL_TOKEN }} 